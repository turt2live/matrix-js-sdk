{"version":3,"sources":["../src/filter-component.js"],"names":["_matches_wildcard","actual_value","filter_value","endsWith","type_prefix","slice","substr","length","FilterComponent","filter_json","types","not_types","rooms","not_rooms","senders","not_senders","contains_url","prototype","check","event","_checkFields","getRoomId","getSender","getType","getContent","url","undefined","room_id","sender","event_type","literal_keys","v","self","forEach","name","match_func","not_name","disallowed_values","map","allowed_values","contains_url_filter","filter","events","limit","module","exports"],"mappings":"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","file":"filter-component.js","sourcesContent":["/*\r\nCopyright 2016 OpenMarket Ltd\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n*/\r\n\"use strict\";\r\n/**\r\n * @module filter-component\r\n */\r\n\r\n/**\r\n * Checks if a value matches a given field value, which may be a * terminated\r\n * wildcard pattern.\r\n * @param {String} actual_value  The value to be compared\r\n * @param {String} filter_value  The filter pattern to be compared\r\n * @return {bool} true if the actual_value matches the filter_value\r\n */\r\nfunction _matches_wildcard(actual_value, filter_value) {\r\n    if (filter_value.endsWith(\"*\")) {\r\n        const type_prefix = filter_value.slice(0, -1);\r\n        return actual_value.substr(0, type_prefix.length) === type_prefix;\r\n    } else {\r\n        return actual_value === filter_value;\r\n    }\r\n}\r\n\r\n/**\r\n * FilterComponent is a section of a Filter definition which defines the\r\n * types, rooms, senders filters etc to be applied to a particular type of resource.\r\n * This is all ported over from synapse's Filter object.\r\n *\r\n * N.B. that synapse refers to these as 'Filters', and what js-sdk refers to as\r\n * 'Filters' are referred to as 'FilterCollections'.\r\n *\r\n * @constructor\r\n * @param {Object} filter_json the definition of this filter JSON, e.g. { 'contains_url': true }\r\n */\r\nfunction FilterComponent(filter_json) {\r\n    this.filter_json = filter_json;\r\n\r\n    this.types = filter_json.types || null;\r\n    this.not_types = filter_json.not_types || [];\r\n\r\n    this.rooms = filter_json.rooms || null;\r\n    this.not_rooms = filter_json.not_rooms || [];\r\n\r\n    this.senders = filter_json.senders || null;\r\n    this.not_senders = filter_json.not_senders || [];\r\n\r\n    this.contains_url = filter_json.contains_url || null;\r\n}\r\n\r\n/**\r\n * Checks with the filter component matches the given event\r\n * @param {MatrixEvent} event event to be checked against the filter\r\n * @return {bool} true if the event matches the filter\r\n */\r\nFilterComponent.prototype.check = function(event) {\r\n    return this._checkFields(\r\n        event.getRoomId(),\r\n        event.getSender(),\r\n        event.getType(),\r\n        event.getContent() ? event.getContent().url !== undefined : false,\r\n    );\r\n};\r\n\r\n/**\r\n * Checks whether the filter component matches the given event fields.\r\n * @param {String} room_id       the room_id for the event being checked\r\n * @param {String} sender        the sender of the event being checked\r\n * @param {String} event_type    the type of the event being checked\r\n * @param {String} contains_url  whether the event contains a content.url field\r\n * @return {bool} true if the event fields match the filter\r\n */\r\nFilterComponent.prototype._checkFields =\r\n    function(room_id, sender, event_type, contains_url) {\r\n    const literal_keys = {\r\n        \"rooms\": function(v) {\r\n            return room_id === v;\r\n        },\r\n        \"senders\": function(v) {\r\n            return sender === v;\r\n        },\r\n        \"types\": function(v) {\r\n            return _matches_wildcard(event_type, v);\r\n        },\r\n    };\r\n\r\n    const self = this;\r\n    Object.keys(literal_keys).forEach(function(name) {\r\n        const match_func = literal_keys[name];\r\n        const not_name = \"not_\" + name;\r\n        const disallowed_values = self[not_name];\r\n        if (disallowed_values.map(match_func)) {\r\n            return false;\r\n        }\r\n\r\n        const allowed_values = self[name];\r\n        if (allowed_values) {\r\n            if (!allowed_values.map(match_func)) {\r\n                return false;\r\n            }\r\n        }\r\n    });\r\n\r\n    const contains_url_filter = this.filter_json.contains_url;\r\n    if (contains_url_filter !== undefined) {\r\n        if (contains_url_filter !== contains_url) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\n/**\r\n * Filters a list of events down to those which match this filter component\r\n * @param {MatrixEvent[]} events  Events to be checked againt the filter component\r\n * @return {MatrixEvent[]} events which matched the filter component\r\n */\r\nFilterComponent.prototype.filter = function(events) {\r\n    return events.filter(this.check, this);\r\n};\r\n\r\n/**\r\n * Returns the limit field for a given filter component, providing a default of\r\n * 10 if none is otherwise specified.  Cargo-culted from Synapse.\r\n * @return {Number} the limit for this filter component.\r\n */\r\nFilterComponent.prototype.limit = function() {\r\n    return this.filter_json.limit !== undefined ? this.filter_json.limit : 10;\r\n};\r\n\r\n/** The FilterComponent class */\r\nmodule.exports = FilterComponent;\r\n"]}