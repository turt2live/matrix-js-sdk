{"version":3,"sources":["../../../src/crypto/store/base.js"],"names":[],"mappings":"AAAA;;;;;;AAMA;;;;;;AAMA","file":"base.js","sourcesContent":["/**\r\n * Internal module. Defintions for storage for the crypto module\r\n *\r\n * @module\r\n */\r\n\r\n/**\r\n * Abstraction of things that can store data required for end-to-end encryption\r\n *\r\n * @interface CryptoStore\r\n */\r\n\r\n/**\r\n * Represents an outgoing room key request\r\n *\r\n * @typedef {Object} OutgoingRoomKeyRequest\r\n *\r\n * @property {string} requestId    unique id for this request. Used for both\r\n *    an id within the request for later pairing with a cancellation, and for\r\n *    the transaction id when sending the to_device messages to our local\r\n *    server.\r\n *\r\n * @property {string?} cancellationTxnId\r\n *    transaction id for the cancellation, if any\r\n *\r\n * @property {Array<{userId: string, deviceId: string}>} recipients\r\n *    list of recipients for the request\r\n *\r\n * @property {module:crypto~RoomKeyRequestBody} requestBody\r\n *    parameters for the request.\r\n *\r\n * @property {Number} state   current state of this request (states are defined\r\n *    in {@link module:crypto/OutgoingRoomKeyRequestManager~ROOM_KEY_REQUEST_STATES})\r\n */\r\n"]}